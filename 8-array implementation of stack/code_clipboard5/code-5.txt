from utils import new_array
from base import BaseList

class ArrayStack(BaseList):
    def __init__(self, iterable=[]):
        self._initialize()
        self.add_all(iterable)
    # initialize function
    def _initialize(self):
        self.a = new_array(1)
        self.n = 0
    # function to get the value
    def get(self, i):
        if i < 0 or i >= self.n: raise IndexError()
        return self.a[i]
    # function to set the value
    def set(self, i, x):
        if i < 0 or i >= self.n: raise IndexError()
        y = self.a[i]
        self.a[i] = x
        return y
    # function to add value in the arraystack
    def add(self, i, x): 
        if i < 0 or i > self.n: raise IndexError()
        if self.n == len(self.a): self._resize()
        self.a[i+1:self.n+1] = self.a[i:self.n]
        self.a[i] = x
        self.n += 1
    # function to remove value from the arraystack
    def remove(self, i): 
        if i < 0 or i >= self.n: raise IndexError()
        x = self.a[i]
        self.a[i:self.n-1] = self.a[i+1:self.n]
        self.n -= 1
        if len(self.a) >= 3*self.n: self._resize()
        return x
    # resize method to adjust arraystack
    def _resize(self):
        b = new_array(max(1, 2*self.n))
        b[0:self.n] = self.a[0:self.n]
        self.a = b
    
if __name__ == "__main__":
    # Object creation
    stack = ArrayStack()
    # Adding values
    stack.add(0, 1)
    stack.add(1, 2)
    stack.add(2, 3)
    print("Stack size: ", stack.size())
    # Removing value
    removed_element = stack.remove(1)
    print("Removed element: ", removed_element)
    # Updated stack
    print("Stack elements:")
    for i in range(stack.size()):
        print(stack.get(i))