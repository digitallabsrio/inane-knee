from utils import new_array
from base import BaseSet

class ArrayQueue(BaseSet):
    def __init__(self, iterable=[]):
        self._initialize()
        self.add_all(iterable)
    # initialize function
    def _initialize(self):
        self.a = new_array(1)
        self.j = 0
        self.n = 0
    # function to resize the array
    def _resize(self):
        b = new_array(max(1, 2*self.n))
        for k in range(self.n):
            b[k] = self.a[(self.j+k) % len(self.a)]
        self.a = b
        self.j = 0
    # function to add values
    def add(self, x):
        if self.n + 1 > len(self.a): self._resize()
        self.a[(self.j+self.n) % len(self.a)] = x
        self.n += 1
        return True
    # function to remove values
    def remove(self):
        if self.n == 0: raise IndexError()
        x = self.a[self.j]
        self.j = (self.j + 1) % len(self.a)
        self.n -= 1
        if len(self.a) >= 3*self.n: self._resize()
        return x
        
if __name__ == "__main__":
    # Setting variables
    m = 10000; n = 50
    # Creating object
    q = ArrayQueue()
    # Adding values
    print("Adding values")
    for i in range(m):
        q.add(i)
        if q.size() > n:
            x = q.remove()
            assert(x == i - n)
    print("Values added")
    # Removing values
    print("Removing values: ")
    for i in range(q.size()):
        print(q.remove())