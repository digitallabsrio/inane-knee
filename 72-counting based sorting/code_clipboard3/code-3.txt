# Radix sort function
def radix_sort(a):
    b = None
    w = 32  # Assuming integers are 32 bits wide
    d = 8   # Assuming each digit is 8 bits wide
    for p in range(w // d):
        c = [0] * (1 << d)
        b = [0] * len(a)
        for i in range(len(a)):
            bits = (a[i] >> (d * p)) & ((1 << d) - 1)
            c[bits] += 1
        for i in range(1, 1 << d):
            c[i] += c[i - 1]
        for i in range(len(a) - 1, -1, -1):
            bits = (a[i] >> (d * p)) & ((1 << d) - 1)
            c[bits] -= 1
            b[c[bits]] = a[i]
        a = b
    return b

if __name__ == "__main__":
  arr = [170, 45, 75, 90, 802, 24, 2, 66]
  print("Original array:", arr)
  sorted_array = radix_sort(arr)
  print("Sorted array:", sorted_array)