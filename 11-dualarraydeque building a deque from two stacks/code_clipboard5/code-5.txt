class DualArrayDeque(BaseList):
    def __init__(self, iterable=[]):
        self._initialize()
        self.add_all(iterable)

    def _balance(self):
        n = self.size()
        mid = n//2
        if 3*self.front.size() < self.back.size() or 3*self.back.size() < self.front.size():
            f = ArrayStack()
            for i in range(mid):
                f.add(i, self.get(mid-i-1))
            b = ArrayStack()
            for i in range(n-mid):
                b.add(i, self.get(mid+i)) 
            self.front = f
            self.back = b