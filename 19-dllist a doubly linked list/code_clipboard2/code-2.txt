class DLList(BaseList):
    
    class Node(object):
        def __init__(self, x):
            self.x = x
            self.next = None
            self.prev = None

    def __init__(self, iterable=[]):
        self._initialize()
        self.add_all(iterable)

    def get_node(self, i):
        if i < self.n/2:
            p = self.dummy.next    
            for _ in range(i): 
                p = p.next
        else:
            p = self.dummy
            for _ in range(self.n, i, -1): 
                p = p.prev
        return p