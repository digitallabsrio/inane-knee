class SkiplistSSet(BaseSet):
    class Node(object):
        """A node in a skip list"""
        def __init__(self, x, h):
            self.x = x
            self.next = new_array(h+1)
        
    def __init__(self, iterable=[]):
        self._initialize()
        self.add_all(iterable)
        
    def find_pred_node(self, x):
        u = self.sentinel
        r = self.h
        while r >= 0:
            while u.next[r] is not None and u.next[r].x < x:
                u = u.next[r]  # go right in list r
            r -= 1  # go down into list r-1
        return u

    def find(self, x):
        u = self.find_pred_node(x)
        if u.next[0] is None: return None
        return u.next[0].x